$header-height: 118px;

html,
body {
  min-width: $screen-min;
  height: 100%;
  width: 100%;
}

//body {
//  position: relative;
//}


//
//.l-top-bar {
//  height: #{69 +52}px;
//  @media (min-width: $screen-sm) {  // todo - create a variable to encapsulate this - or use flexbox !!
//    height: #{50 +52}px;
//  }
//  @media (min-width: $screen-lg) {
//    height: #{52 + 31}px;
//  }
//  //border: 1px solid orange;
//}
//
//.l-app {
//  position: absolute;
//  top: #{69 +52}px;
//  @media (min-width: $screen-sm) {
//    top: #{50 +52}px;
//  }
//  @media (min-width: $screen-lg) {
//    top: #{52 + 31}px;
//  }
//  right: 0;
//  left: 0;
//  right: 0;
//  bottom: 0;
//  //border: 3px solid purple;
//  overflow: scroll;
//}
//
//
//.stage--route {
//  transform: translate3d(0, 0, 0);
//  position: relative;
//  height: 100%;
//  width: 100%;
//  //border: 2px solid red;
//
//  > div {
//    @extend .animated;      // needed by animate.css !! don't remove
//    animation-timing-function: $easeOutQuart;
//    animation-duration: 600ms;  // must match vals set <TransitionGroup transitionEnterTimeout={ 400 } transitionLeaveTimeout={ 400 } // todo - make this functional css in the component
//    //animation-delay: 200ms;
//    //&.active {
//    //animation-delay: 0ms;
//    //animation-duration: 300ms;
//    //}
//    background: white;
//    //border: 2px solid green;
//    position: absolute;
//    top:0;
//    left:0;
//    right: 0;
//    //bottom: 0;
//
//    padding-bottom: 3em;
//  }
//}
//
//@keyframes slideOutLeftFade {
//  0% {
//    transform: translate3d(0, 0, 0);
//    opacity: 1;
//  }
//  85% {
//    opacity: 0;
//  }
//  100% {
//    opacity: 0;
//    visibility: hidden;
//    transform: translate3d(-100%, 0, 0);
//  }
//}
//
//.slideOutLeftFade {
//  animation-name: slideOutLeftFade;
//}
//
//.fadeIn {
//  //animation-delay: 100ms;   // config.ROUTE_TRANSITION_ENTER_DELAY
//  animation-delay: 0ms;   // config.ROUTE_TRANSITION_ENTER_DELAY
//  animation-duration: 200ms;
//}
//
//.fadeOut {
//  animation-delay: 0ms;
//}
//






/**

 Route transitions works by "simultaneously" adding classes on the injected
 page:
      .fadeIn.fadeIn-active
      .fadeOut.fadeOut-active

  * Set TransitionGroup's transitionEnterTimeout and transitionLeaveTimeout to
  determine the duration for when to remove these classes.

  * Set CSS transition and animations to control the look and feel of the
  transition

  ** Important **
  * Pages must have an absolute placement in the parent so that they stack
  behind one another
    ie. .app-scene nests many .app-page


  Layout:

  <body class="editor">
    <div class="editor__top-bar">
    </div>
    <div class="editor__app-scene">
      <div class="editor__app-page">
      </div>
    </div>
  </body>

 */

.editor {
  //border: 8px solid red;
  height: 100%;
  width: 100%;
}

.editor__top-bar {
  height: $header-height;
  //border: 8px solid orange;
  position: fixed;
  left: 0;
  right: 0;
  top: 0;
  //height: 202px;
}

.editor__app {
  //border: 6px solid purple;
  height: 100%;
  width: 100%;
  padding-top: $header-height;

  > div {
    height: 100%;
    width: 100%;
  }
}

.app-scene {
  //border: 8px solid yellow;
  height: 100%;
  width: 100%;
  position: relative;
  //margin-top: 102px;

  // animate
  transform: translate3d(0, 0, 0);
}

.app-page-parent {
  //border: 8px solid blue;
  height: 100%;
  width: 100%;
  position: absolute;
  top: 0;
  //top: #{69 +52}px;
  left: 0;
  right: 0;
  bottom: 0;
  overflow: hidden;
  transform: translate3d(0, 0, 0);

  // .app-page
  > div {
    transform: translate3d(0, 0, 0);
    //border: 8px solid pink;
    background-color: white;
    padding-bottom: 2em;

    height: 100%;
    overflow: scroll;

    // animate
    @extend .animated;
    animation-duration: 500ms;

    .fadeIn {
      //animation-duration: 200ms;   // transitionEnterTimeout
    }
    .fadeOut {
      //animation-duration: 500ms;   // transitionLeaveTimeout
    }
  }
}
